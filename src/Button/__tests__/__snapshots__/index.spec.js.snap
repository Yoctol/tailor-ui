// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render correctly 1`] = `
.c1 {
  position: absolute;
  border-radius: 50%;
  opacity: 1;
  background: rgba(0,0,0,0.2);
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.c0 {
  display: inline-block;
  position: relative;
  overflow: hidden;
  border: 0.0625rem solid;
  border-radius: 0.25rem;
  border-color: #191723;
  background-color: #0e0c1a;
  color: #ffffff;
  line-height: 1rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 2.25rem;
  padding: 0.5625rem 0.5rem;
  font-size: 1rem;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.c0:focus {
  border-color: #0e0c1a;
  outline: 0;
}

.c0:hover {
  background-color: #ffffff;
  color: #0e0c1a;
}

.c0:disabled,
.c0[disabled] {
  opacity: 0.5;
  cursor: default;
  pointer-events: none;
}

<Button
  active={false}
  block={false}
  circle={false}
  ghost={false}
  light={false}
  loading={false}
  size="m"
>
  <Button__StyledButton
    active={false}
    block={false}
    circle={false}
    ghost={false}
    innerRef={
      Object {
        "current": <button
          class="c0"
        >
          Text Button
          <div
            class="c1"
          />
        </button>,
      }
    }
    light={false}
    loading={false}
    onMouseUp={[Function]}
    onTouchend={[Function]}
    size="m"
  >
    <button
      className="c0"
      onMouseUp={[Function]}
      size="m"
    >
      Text Button
      <Ripple>
        <Ripple__StyledRipple
          rippling={false}
          style={Object {}}
        >
          <div
            className="c1"
            style={Object {}}
          />
        </Ripple__StyledRipple>
      </Ripple>
    </button>
  </Button__StyledButton>
</Button>
`;

exports[`Button should render with props light, circle and active 1`] = `
.c1 {
  position: absolute;
  border-radius: 50%;
  opacity: 1;
  background: rgba(0,0,0,0.2);
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.c0 {
  display: inline-block;
  position: relative;
  overflow: hidden;
  border: 0.0625rem solid;
  border-radius: 0.25rem;
  border-color: #191723;
  background-color: #0e0c1a;
  color: #ffffff;
  line-height: 1rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 2.25rem;
  padding: 0.5625rem 0.5rem;
  font-size: 1rem;
  border-color: #e9e9e9;
  background-color: #ffffff;
  color: #373737;
  border-color: #ab9272;
  background-color: #ab9272;
  color: #ffffff;
  border-radius: 999px;
  padding: 0.5625rem calc(0.5rem * 2);
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.c0:focus {
  border-color: #0e0c1a;
  outline: 0;
}

.c0:hover {
  background-color: #ffffff;
  color: #0e0c1a;
}

.c0:disabled,
.c0[disabled] {
  opacity: 0.5;
  cursor: default;
  pointer-events: none;
}

.c0:focus {
  border-color: #0e0c1a;
}

.c0:hover {
  background-color: #e9e9e9;
}

.c0:hover {
  background-color: #c7ad8d;
  color: #ffffff;
}

.c0:focus {
  border-color: #ab9272;
}

<Button
  active={true}
  block={false}
  circle={true}
  ghost={false}
  light={true}
  loading={false}
  size="m"
>
  <Button__StyledButton
    active={true}
    block={false}
    circle={true}
    ghost={false}
    innerRef={
      Object {
        "current": <button
          class="c0"
        >
          Text Button
          <div
            class="c1"
          />
        </button>,
      }
    }
    light={true}
    loading={false}
    onMouseUp={[Function]}
    onTouchend={[Function]}
    size="m"
  >
    <button
      className="c0"
      onMouseUp={[Function]}
      size="m"
    >
      Text Button
      <Ripple>
        <Ripple__StyledRipple
          rippling={false}
          style={Object {}}
        >
          <div
            className="c1"
            style={Object {}}
          />
        </Ripple__StyledRipple>
      </Ripple>
    </button>
  </Button__StyledButton>
</Button>
`;
